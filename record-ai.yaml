apiVersion: v1
kind: Namespace
metadata:
  name: kpaas
---
# 1️⃣ MySQL Database
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: ${NFS_PATH}
    server: ${NFS_SERVER}
    readOnly: false
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mysql-nfs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: kpaas
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: mysql-nfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: kpaas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          envFrom:
            - secretRef:
                name: record-ai-secrets
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-storage
              subPath: mysql-data
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: kpaas
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
  clusterIP: None
---
# 2️⃣ DB Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-service
  namespace: kpaas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-service
  template:
    metadata:
      labels:
        app: db-service
    spec:
      containers:
        - name: db-service
          image: hyejinnnnnn/db_service:latest
          envFrom:
            - secretRef:
                name: record-ai-secrets
          ports:
            - containerPort: 8002
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: kpaas
spec:
  selector:
    app: db-service
  ports:
    - port: 8002
      targetPort: 8002
  clusterIP: None
---
# 3️⃣ Save Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: save-service
  namespace: kpaas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: save-service
  template:
    metadata:
      labels:
        app: save-service
    spec:
      containers:
        - name: save-service
          image: hyejinnnnnn/save_service:latest
          envFrom:
            - secretRef:
                name: record-ai-secrets
          ports:
            - containerPort: 8001
---
apiVersion: v1
kind: Service
metadata:
  name: save-service
  namespace: kpaas
spec:
  selector:
    app: save-service
  ports:
    - port: 8001
      targetPort: 8001
  type: LoadBalancer
---
# 4️⃣ Generate Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: generate-service
  namespace: kpaas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: generate-service
  template:
    metadata:
      labels:
        app: generate-service
    spec:
      containers:
        - name: generate-service
          image: hyejinnnnnn/generate_service:latest
          envFrom:
            - secretRef:
                name: record-ai-secrets
          ports:
            - containerPort: 8003
---
apiVersion: v1
kind: Service
metadata:
  name: generate-service
  namespace: kpaas
spec:
  selector:
    app: generate-service
  ports:
    - port: 8003
      targetPort: 8003
  type: LoadBalancer
